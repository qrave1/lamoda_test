openapi: 3.0.0
info:
  version: "1.0.0"
  title: Warehouse API
  description: API для работы с товарами на складе
servers:
  - url: http://localhost:8080
paths:
  /reserve:
    post:
      summary: Резервирование товара на складе для доставки
      description: Резервирует указанные товары на складе
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_codes:
                  type: array
                  minItems: 1
                  items:
                    type: integer
                    minimum: 0
                  example: [ "code1", "code2" ]
                warehouse_id:
                  type: integer
                  minimum: 0
                  example: 1
                quantity:
                  type: integer
                  minimum: 0
              required:
                - product_codes
                - warehouse_id
                - quantity
      responses:
        '200':
          description: Успешное резервирование товаров
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Products reserved successfully"
                required:
                  - message
        '400':
          description: Ошибка в запросе
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Insufficient product quantity"
                required:
                  - error
        '404':
          description: Не найдено
        '500':
          description: Внутренняя ошибка сервера
  /release:
    post:
      summary: Освобождение резерва товаров
      description: Освобождает указанные товары из резерва
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_codes:
                  type: array
                  minItems: 1
                  items:
                    type: integer
                    minimum: 0
                  example: [ "code1", "code2" ]
                warehouse_id:
                  type: integer
                  minimum: 0
                  example: 1
              required:
                - product_codes
                - warehouse_id
      responses:
        '200':
          description: Успешное освобождение товаров из резерва
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Products released successfully"
                required:
                  - message
        '400':
          description: Ошибка в запросе
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No reserved products to release"
                required:
                  - error
        '404':
          description: Не найдено
        '500':
          description: Внутренняя ошибка сервера
  /inventory:
    get:
      summary: Получение количества оставшихся товаров на складе
      description: Возвращает количество товаров, оставшихся на складе
      parameters:
        - in: query
          name: warehouse_id
          required: true
          schema:
            type: integer
          description: Идентификатор склада
      responses:
        '200':
          description: Успешное получение количества товаров
          content:
            application/json:
              schema:
                type: integer
                example: 25
        '400':
          description: Ошибка в запросе
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Warehouse ID is required"
                required:
                  - error
        '404':
          description: Не найдено
        '500':
          description: Внутренняя ошибка сервера
